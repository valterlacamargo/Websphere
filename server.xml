<server>
    <featureManager>       
        <feature>openidConnectServer-1.0</feature>
        <feature>ssl-1.0</feature>
        <feature>appSecurity-2.0</feature>
        <feature>servlet-3.1</feature>
    </featureManager>   
 
	<basicRegistry id="basic" realm="OpBasicRealm">
		<user name="Bob" password="bobpwd" />
		<user name="user1" password="security" />
		<user name="user2" password="security" />
		
       <group name="admins">
          <member name="Bob" />
       </group>
	   
	   <group name="FUNCI">
          <member name="user1" />
       </group>
		
       <group id="users" name="users">
			<member name="Bob" />
			<member name="user1" />
			<member name="user2" />
       </group>
	</basicRegistry>
	
    <keyStore id="defaultKeyStore" password="{aes}AOwFo8y10i/fQOoQc43XLb5feqKZCU1Y3pynCPkP88Hq" />
		
    <httpEndpoint host="*" httpPort="9081" httpsPort="9444" id="defaultHttpEndpoint"/>
 
     
	<openidConnectProvider 
		id="OP" 
		oauthProviderRef="Oauth" 
		signatureAlgorithm="RS256" 
		jwkEnabled="true" >
    </openidConnectProvider>
 <!--
 jwtAccessToken="true" allows the OP to issue access tokens that are also JWTs (that will be signed using the same configuration as configured for the OpenID Connect Provider). 
 This allows the RPs to introspect information in the access token without needing to go back to the OP to discover allowed scopes etc.
 -->
    <oauthProvider id="Oauth" jwtAccessToken="true" >
        <localStore>   
            <client 
				name="rp" 
				secret="secret"
                displayname="rp"
				introspectTokens="true"
                redirect="https://www.example.com:9443/oidcclient/redirect/RP"
                scope="openid profile scope1 email phone address"
				preAuthorizedScope="openid profile"
                enabled="true"/>
        </localStore>
    </oauthProvider> 
	
	<oauth-roles>
        <authenticated>
            <special-subject type="ALL_AUTHENTICATED_USERS" />  
        </authenticated>
    </oauth-roles>

</server>